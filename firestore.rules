rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	function isLoggedIn() {
      return request.auth != null;
    }
    function isSelf(uid){
      return request.auth == uid;
    }
    function isArticleAuthor(articleId) {
      let article = get(/databases/$(database)/documents/articles/$(articleId));
      return article.data.author == request.auth.uid;
    }
    function isVerified() {
        return request.auth.verified == true;
    }
    function isAdmin(){
      return request.auth.role == "admin";
    }

    match /articles/{articleId} {
      allow read: if true;
      allow write: if isLoggedIn() && isVerified() && isArticleAuthor(articleId);
    }
    
    match /users/{uid} {
      allow read: if isLoggedIn() && isVerified();
      allow create: if true;
      allow update, delete: if isLoggedIn() && isVerified() && isAdmin();
    }

    match /profiles/{uid} {
      allow read: if isLoggedIn() && isVerified();
      allow write: if isLoggedIn() && isVerified() && isSelf(uid);
    }
  }
}